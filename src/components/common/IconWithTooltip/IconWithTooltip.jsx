import React, { useState, useRef, useEffect } from 'react';
import styles from './IconWithTooltip.module.css';

// üí° –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º 'icon' –≤ 'Icon' —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã
const IconWithTooltip = ({
    icon: Icon,
    tooltipText,
    size = '24px',
    onClick,
}) => {
    const [isTooltipVisible, setIsTooltipVisible] = useState(false);
    const timeoutRef = useRef(null);

    // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ (—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–µ–∫)
    useEffect(() => {
        return () => {
            if (timeoutRef.current) {
                clearTimeout(timeoutRef.current);
            }
        };
    }, []);

    const handleMouseEnter = () => {
        if (tooltipText) {
            // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
            if (timeoutRef.current) clearTimeout(timeoutRef.current);

            // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä
            timeoutRef.current = setTimeout(() => {
                setIsTooltipVisible(true);
            }, 500);
        }
    };

    const handleMouseLeave = () => {
        // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä, —á—Ç–æ–±—ã –ø–æ–¥—Å–∫–∞–∑–∫–∞ –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å –ø–æ—Å–ª–µ —É—Ö–æ–¥–∞ –∫—É—Ä—Å–æ—Ä–∞
        if (timeoutRef.current) clearTimeout(timeoutRef.current);
        setIsTooltipVisible(false);
    };

    return (
        <div
            className={styles.iconContainer}
            // üí° –î–æ–±–∞–≤–∏–ª–∏ onClick, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–∑–≤–Ω–µ
            onClick={onClick}
            onMouseEnter={handleMouseEnter}
            onMouseLeave={handleMouseLeave}
        >
            {/* ‚úÖ –†–µ–Ω–¥–µ—Ä–∏–º 'Icon' –∫–∞–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Ä–∞–∑–º–µ—Ä */}
            <Icon
                style={{ width: size, height: size }} // –ß–∞—Å—Ç–æ –∏–∫–æ–Ω–∫–∏ –∏–∑ react-icons –ª—É—á—à–µ —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ inline style
                size={size} // –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–æ–ø—Å size, –µ—Å–ª–∏ Icon –µ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç
                className={styles.icon}
            />

            {isTooltipVisible && (
                <div className={styles.tooltip}>{tooltipText}</div>
            )}
        </div>
    );
};

export default IconWithTooltip;
